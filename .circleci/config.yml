# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1

commands:
  install_docker_client:
    description: "Install Docker client"
    steps:
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
  checkout_ruby_master:
    description: "Checkout Ruby master"
    steps:
      - restore_cache:
          keys:
            - ruby-master
      - run:
          command: |
            if test -f tmp/ruby/configure.ac; then
              cd tmp/ruby
              git pull --rebase
            else
              mkdir -p tmp
              git clone https://github.com/ruby/ruby.git tmp/ruby
            fi
      - save_cache:
          key: ruby-master
          paths:
            - tmp/ruby
  build_image:
    description: "Build Docker image"
    parameters:
      ruby_version:
        type: string
        default: "master"
      nightly:
        type: boolean
        default: false
      image_name_suffix:
        type: string
        default: ''
      arch:
        type: string
        default: "amd64"
      ubuntu_version:
        type: string
        default: "focal"
    steps:
      - run:
          name: Build docker image
          command: |
            rake docker:build ruby_version=<< parameters.ruby_version >> ubuntu_version=<< parameters.ubuntu_version >> image_name_suffix=<< parameters.image_name_suffix >><<# parameters.nightly >> nightly=yes<</ parameters.nightly >> arch=<< parameters.arch >>
  push_image:
    description: "Push Docker image"
    steps:
      - run:
          name: Push docker image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push rubylang/ruby

jobs:
  build_master:
    parameters:
      nightly:
        type: boolean
        default: false
      push:
        type: boolean
        default: false
      arch:
        type: string
        default: "amd64"
      ubuntu_version:
        type: string
        default: "focal"
    docker:
      - image: ruby:latest
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - install_docker_client
      - checkout_ruby_master
      - build_image:
          ruby_version: "master"
          nightly: << parameters.nightly >>
          arch: << parameters.arch >>
          ubuntu_version: << parameters.ubuntu_version >>
      - when:
          condition: <<parameters.push>>
          steps:
            - push_image

  build_master_debug:
    parameters:
      nightly:
        type: boolean
        default: false
      push:
        type: boolean
        default: false
      ubuntu_version:
        type: string
        default: "focal"
    docker:
      - image: ruby:latest
    working_directory: ~/repo
    environment:
      cppflags: -DRUBY_DEBUG=1
      optflags: -O3 -fno-inline
    steps:
      - checkout
      - setup_remote_docker
      - install_docker_client
      - checkout_ruby_master
      - build_image:
          ruby_version: "master"
          nightly: << parameters.nightly >>
          ubuntu_version: << parameters.ubuntu_version >>
          image_name_suffix: -debug
      - when:
          condition: <<parameters.push>>
          steps:
            - push_image

  build_2_7:
    parameters:
      push:
        type: boolean
        default: false
    docker:
      - image: ruby:latest
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - install_docker_client
      - build_image:
          ruby_version: "2.7.1"
      - when:
          condition: <<parameters.push>>
          steps:
            - push_image

  build_2_6:
    parameters:
      push:
        type: boolean
        default: false
    docker:
      - image: ruby:latest
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - install_docker_client
      - build_image:
          ruby_version: "2.6.6"
      - when:
          condition: <<parameters.push>>
          steps:
            - push_image

  build_2_5:
    parameters:
      push:
        type: boolean
        default: false
    docker:
      - image: ruby:latest
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - install_docker_client
      - build_image:
          ruby_version: "2.5.8"
      - when:
          condition: <<parameters.push>>
          steps:
            - push_image

  build_2_4:
    parameters:
      push:
        type: boolean
        default: false
    docker:
      - image: ruby:latest
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - install_docker_client
      - build_image:
          ruby_version: "2.4.10"
      - when:
          condition: <<parameters.push>>
          steps:
            - push_image

  build_2_3:
    parameters:
      push:
        type: boolean
        default: false
    docker:
      - image: ruby:latest
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - install_docker_client
      - build_image:
          ruby_version: "2.3.8"
      - when:
          condition: <<parameters.push>>
          steps:
            - push_image

workflows:
  version: 2

  github:
    jobs:
      - build_master:
          name: build_master_amd64_push
          push: true
          filters:
            branches:
              only:
                - master
      - build_master:
          name: build_master_amd64
          filters:
            branches:
              ignore:
                - master
      - build_master:
          name: build_master_arm64
          arch: 'arm64'
          filters:
            branches:
              ignore:
                - master
      - build_master_debug:
          name: build_master_debug_amd64_push
          push: true
          filters:
            branches:
              only:
                - master
      - build_master_debug:
          name: build_master_debug_amd64
          filters:
            branches:
              ignore:
                - master
      - build_2_7
      - build_2_6
      - build_2_5
      - build_2_4
      - build_2_3

  nightly:
    triggers:
      - schedule:
          cron: "0 17 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build_master_focal:
          nightly: true
          push: true
          ubuntu_version: "focal"
      - build_master_bionic:
          nightly: true
          push: true
          ubuntu_version: "bionic"
      - build_master_debug:
          nightly: true
          push: true
